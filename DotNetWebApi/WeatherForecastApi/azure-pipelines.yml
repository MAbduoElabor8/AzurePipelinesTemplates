trigger:
  branches:
    include:
      - main

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job:
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: UseDotNet@2
            displayName: "Use .NET 6.0.x"
            inputs:
              version: "6.0.x"

          - task: DotNetCoreCLI@2
            displayName: "Build Projects"
            inputs:
              command: build
              projects: $(System.DefaultWorkingDirectory)/**/*.csproj
              arguments: "--configuration Release"

          - task: DotNetCoreCLI@2
            displayName: "Run tests"
            inputs:
              command: test
              projects: $(System.DefaultWorkingDirectory)/**/*Tests.csproj
              arguments: '--configuration Release --collect:"XPlat Code Coverage"'

          - script: |
              echo '##vso[task.setvariable variable=disable.coverage.autogenerate]true'
              dotnet tool install --global dotnet-reportgenerator-globaltool
              reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml \
                -targetdir:$(Build.SourcesDirectory)/CodeCoverage \
                -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
            displayName: "Create Code Coverage Report"
            condition: always()

          - task: PublishCodeCoverageResults@1
            displayName: "Publish Code Coverage Results"
            condition: always()
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml"
              reportDirectory: "$(Build.SourcesDirectory)/CodeCoverage"
              failIfCoverageEmpty: true
